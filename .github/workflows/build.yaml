name: build

on:
  push:
    branches: [ main ]
  pull_request: 
    branches: [ main ]
    
permissions:
  contents: write  

# this is needed to bootstrap vcpkg
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  VCPKG_FEATURE_FLAGS: dependencygraph

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: windows-latest
            preset: x64-release
          - os: ubuntu-latest
            preset: linux-release
          - os: macos-latest
            preset: macos-release
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - name: checkout repository
      uses: actions/checkout@v3
      with:
        submodules: recursive #include vcpkg and other submodules if used
    - name: bootstrap vcpkg
      run: |
         if [ "$RUNNER_OS" == "Windows" ]; then
              ./external/vcpkg/bootstrap-vcpkg.bat -disableMetrics
         else
              ./external/vcpkg/bootstrap-vcpkg.sh -disableMetrics
         fi 
    - name: add ninja # cmake has defined ninja generator in CMakePresets.txt
      uses: seanmiddleditch/gha-setup-ninja@master
    - if: runner.os == 'Windows'
      name: add msvc #windows-latest does not have a msvc compiler. This project use visual studio 2022
      uses: ilammy/msvc-dev-cmd@v1
      with:
        vsversion: 2022
    - name: configure
      run: cmake --preset ${{ matrix.preset }}
    - name: build
      run: cmake --build --preset ${{ matrix.preset }}
    - name: unit test
      run: ctest --preset ${{ matrix.preset }}
